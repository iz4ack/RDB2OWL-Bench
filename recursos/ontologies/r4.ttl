@prefix : <http://example.org/ontology#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .

#################################################################
# Ontology
#################################################################
:Resource4 a owl:Ontology ;
    rdfs:label "Ontology 4" ;
    rdfs:comment "Resource 4. UNIQUE, super-entity as union of two entities (explicit and implicit), asymmetric properties, property chain, inverseOf, IrreflexiveProperty." .

#################################################################
# Classes and Definitions
#################################################################

:TaxEntity a owl:Class ;
    rdfs:label "Tax Entity" ;
    rdfs:comment "Base class for a tax entity, comprising legal and natural persons." ;
    owl:equivalentClass [ 
        a owl:Class ;
        owl:disjointUnionOf ( :Company :Person ) 
    ] ;
    owl:hasKey ( :hasNIF ) .

:hasNIF a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:domain :TaxEntity ;
    rdfs:range xsd:string ;
    rdfs:label "NIF" ;
    rdfs:comment "Tax Identification Number of the entity." .

## Person
:Person a owl:Class ;
    rdfs:label "Person" ;
    rdfs:comment "Base class to represent people in the organization." ;
    rdfs:subClassOf :TaxEntity ;
    owl:hasKey ( :hasEmail :hasNIF ) .

:Person owl:equivalentClass [ 
    a owl:Class ;
    owl:unionOf ( :Employee :Consultant ) 
] .

:hasEmail a owl:DatatypeProperty ;
    rdfs:domain :Person ;
    rdfs:range xsd:string ;
    rdfs:label "email" .

:hasFirstName a owl:DatatypeProperty ;
    rdfs:domain :Person ;
    rdfs:range xsd:string ;
    rdfs:label "first name" ;
    rdfs:comment "First name of the person." .

:mentors a owl:ObjectProperty, owl:AsymmetricProperty, owl:IrreflexiveProperty ;
    rdfs:domain :Person ;
    rdfs:range :Person ;
    rdfs:label "mentors" ;
    rdfs:comment "Mentoring relationship between two people." .

:hasMentor owl:inverseOf :mentors .

:worksAt a owl:ObjectProperty ;
    rdfs:domain :Person ;
    rdfs:range :Company ;
    rdfs:label "works at" ;
    rdfs:comment "Employment relationship between a person and a company." .

:isLocatedAt a owl:ObjectProperty ;
    rdfs:domain :Person ;
    rdfs:range :Location ;
    rdfs:label "is located at" ;
    rdfs:comment "Indicates the location where a person works." .

:isLocatedAt owl:propertyChainAxiom ( :worksAt :hasLocation ) .

## Employee
:Employee a owl:Class ;
    rdfs:subClassOf :Person ;
    rdfs:label "Employee" ;
    rdfs:comment "Person who works for the organization." .

:hasSalary a owl:DatatypeProperty ;
    rdfs:domain :Employee ;
    rdfs:range xsd:decimal ;
    rdfs:label "salary" ;
    rdfs:comment "Employee's salary." .

:Employee owl:disjointWith :Consultant .

## Consultant
:Consultant a owl:Class ;
    rdfs:subClassOf :Person ;
    rdfs:label "Consultant" ;
    rdfs:comment "Person working as a consultant in the organization." .

:hasHourlyRate a owl:DatatypeProperty ;
    rdfs:domain :Consultant ;
    rdfs:range xsd:decimal ;
    rdfs:label "hourly rate" ;
    rdfs:comment "Consultant's rate." .

## Company
:Company a owl:Class ;
    rdfs:label "Company" ;
    rdfs:comment "Class representing a company." ;
    rdfs:subClassOf :TaxEntity ;
    rdfs:subClassOf [
        a owl:Restriction ;
        owl:onProperty :hasLocation ;
        owl:cardinality "1"^^xsd:nonNegativeInteger 
    ] .

:hasCompanyName a owl:DatatypeProperty ;
    rdfs:domain :Company ;
    rdfs:range xsd:string ;
    rdfs:label "company name" ;
    rdfs:comment "Name of the company." .

:hasLocation a owl:ObjectProperty, owl:InverseFunctionalProperty, owl:FunctionalProperty;
    rdfs:domain :Company ;
    rdfs:range :Location ;
    rdfs:label "has location" ;
    rdfs:comment "Relationship indicating the location of the company." .

## Location
:Location a owl:Class ;
    rdfs:label "Location" ;
    rdfs:comment "Class representing a geographic location." .

:hasStreet a owl:DatatypeProperty ;
    rdfs:domain :Location ;
    rdfs:range xsd:string ;
    rdfs:label "street" ;
    rdfs:comment "Street name." .

:hasCity a owl:DatatypeProperty ;
    rdfs:domain :Location ;
    rdfs:range xsd:string ;
    rdfs:label "city" ;
    rdfs:comment "City name." .

:hasProvince a owl:DatatypeProperty ;
    rdfs:domain :Location ;
    rdfs:range xsd:string ;
    rdfs:label "province" ;
    rdfs:comment "Province name." .

:hasCoordinates a owl:DatatypeProperty ;
    rdfs:domain :Location ;
    rdfs:range xsd:string ;
    rdfs:label "coordinates" ;
    rdfs:comment "Geographic coordinates of the location." .
