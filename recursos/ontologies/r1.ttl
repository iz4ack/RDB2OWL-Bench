@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix :      <http://example.org/ontology#> .

:UniversityOntology a owl:Ontology ;
    rdfs:label "University Ontology (example)" ;
    rdfs:comment "Resource 1. 1..N relation, N..N relation, regular class, N..N relation with intermediate attributes, unique, superclass inference." .

##### Department #####
:Department a owl:Class ;
    rdfs:label "Department" ;
    owl:hasKey :hasID ;
    rdfs:subClassOf [
        a owl:Restriction ;
        owl:onProperty :hasDepartmentId ;
        owl:cardinality "1"^^xsd:nonNegativeInteger
    ] ;
    rdfs:comment "Represents a department within the university." .

## DatatypeProperties
:hasID a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:domain [
        a owl:Class ;
        owl:unionOf (:Course :Department)
    ];
    rdfs:range xsd:string ;
    rdfs:label "ID" ;
    rdfs:comment "Unique identifier." .

:hasDepartmentName a owl:DatatypeProperty ;
    rdfs:domain :Department ;
    rdfs:range xsd:string ;
    rdfs:label "departmentName" ;
    rdfs:comment "Name of the department (e.g., 'Mathematics')." .

##### Person #####
:Person a owl:Class ;
    rdfs:label "Person" ;
    rdfs:comment "Represents a person." ;
    owl:hasKey :hasDNI ;
    rdfs:subClassOf [
        a owl:Restriction ;
        owl:onProperty :hasDNI ;
        owl:cardinality "1"^^xsd:nonNegativeInteger
    ] .

:hasDNI a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:domain :Person ;
    rdfs:range xsd:string ;
    rdfs:label "DNI" ;
    rdfs:comment "National identity document number." .

:hasFirstName a owl:DatatypeProperty ;
    rdfs:domain :Person ;
    rdfs:range xsd:string ;
    rdfs:label "personFirstName" ;
    rdfs:comment "First name of the person." .

:hasLastName a owl:DatatypeProperty ;
    rdfs:domain :Person ;
    rdfs:range xsd:string ;
    rdfs:label "personLastName" ;
    rdfs:comment "Last name of the person." .

:hasEmail a owl:DatatypeProperty ;
    rdfs:domain :Person ;
    rdfs:range xsd:string ;
    rdfs:label "personEmail" ;
    rdfs:comment "Email address of the person." .

:hasBirthDate a owl:DatatypeProperty ;
    rdfs:domain :Person ;
    rdfs:range xsd:dateTime ;
    rdfs:label "birthDate" ;
    rdfs:comment "Birth date of the person." .

##### Student #####
:Student a owl:Class ;
    rdfs:label "Student" ;
    rdfs:comment "Represents a university student." ;
    rdfs:subClassOf :Person .

## ObjectProperties
:enrrolledCourse a owl:ObjectProperty ;
    rdfs:domain :Student ;
    rdfs:range :Enrollment ;
    rdfs:label "enrolledCourse" ;
    rdfs:comment "Course in which the student is enrolled." .

:hasEnrollmentEvaluation a owl:ObjectProperty ;
    owl:propertyChainAxiom ( :enrrolledCourse :hasEvaluation) .

:hasProfessor a owl:ObjectProperty ;
    rdfs:domain :Student ;
    rdfs:range :Professor ;
    rdfs:label "advisorProfessor" ;
    rdfs:comment "Professor from a department associated with the student's course." .

##### Professor #####
:Professor a owl:Class ;
    rdfs:label "Professor" ;
    rdfs:comment "Represents a university professor." ;
    rdfs:subClassOf :Person ;
    rdfs:subClassOf [
        a owl:Restriction ;
        owl:onProperty :belongsToDepartment ;
        owl:cardinality "1"^^xsd:nonNegativeInteger
    ] .

## ObjectProperties
:belongsToDepartment a owl:ObjectProperty, owl:FunctionalProperty ;
    rdfs:domain [
        a owl:Class ;
        owl:unionOf (:Professor :Course)
    ] ;
    rdfs:range :Department ;
    rdfs:label "Department_ID" ;
    rdfs:comment "Department to which the professor or course belongs ." .

##### Course #####
:Course a owl:Class ;
    rdfs:label "Course" ;
    owl:hasKey :hasID;
    rdfs:subClassOf [
        a owl:Restriction ;
        owl:onProperty :hasCourseId ;
        owl:cardinality "1"^^xsd:nonNegativeInteger
    ] ;
    rdfs:subClassOf [
        a owl:Restriction ;
        owl:onProperty :belongsToDepartment ;
        owl:cardinality "1"^^xsd:nonNegativeInteger
    ] ;
    rdfs:comment "Represents a course offered by the university." .

## DatatypeProperties
:hasCourseName a owl:DatatypeProperty ;
    rdfs:domain :Course ;
    rdfs:range xsd:string ;
    rdfs:label "courseName" ;
    rdfs:comment "Name or title of the course." .

:hasCourseLevel a owl:DatatypeProperty ;
    rdfs:domain :Course ;
    rdfs:range xsd:string ;
    rdfs:label "courseLevel" ;
    rdfs:comment "Level of the course (e.g., 'Basic', 'Advanced')." .

:hasCourseCredits a owl:DatatypeProperty ;
    rdfs:domain :Course ;
    rdfs:range xsd:integer ;
    rdfs:label "courseCredits" ;
    rdfs:comment "Number of credits for the course." .

## ObjectProperties

##### Enrollment #####
:Enrollment a owl:Class ;
    rdfs:label "Enrollment" ;
    rdfs:comment "Relates a student to a course (registration)." ;
    owl:hasKey (:hasCourseEnrollment :hasStudentEnrolled) ;
    rdfs:subClassOf [
        a owl:Restriction ;
        owl:onProperty :hasStudentEnrolled ;
        owl:cardinality "1"^^xsd:nonNegativeInteger
    ] ;
    rdfs:subClassOf [
        a owl:Restriction ;
        owl:onProperty :hasCourseEnrollment ;
        owl:cardinality "1"^^xsd:nonNegativeInteger
    ] .

## DatatypeProperties
:hasEnrollmentDate a owl:DatatypeProperty;
    rdfs:domain :Enrollment ;
    rdfs:range xsd:dateTime ;
    rdfs:label "enrollmentDate" ;
    rdfs:comment "Date the student enrolled in the course." .

## ObjectProperties
:hasStudentEnrolled owl:inverseOf :enrrolledCourse ;
    a owl:ObjectProperty, owl:FunctionalProperty ;
    rdfs:domain :Enrollment ;
    rdfs:range :Student ;
    rdfs:label "enrolledStudent" ;
    rdfs:comment "Student who is enrolled in the course." .

:hasEvaluation a owl:ObjectProperty, owl:FunctionalProperty ;
    rdfs:domain :Enrollment ;
    rdfs:range :Evaluation ;
    rdfs:label "enrollmentEvaluation" ;
    rdfs:comment "Evaluation associated with the student's enrollment in the course." .

:hasCourseEnrollment a owl:ObjectProperty, owl:FunctionalProperty ;
    rdfs:domain :Enrollment ;
    rdfs:range :Course ;
    rdfs:label "enrolledCourse" ;
    rdfs:comment "Course the student is enrolled in." .

##### Evaluation #####
:Evaluation a owl:Class ;
    rdfs:label "Evaluation" ;
    owl:hasKey (:hasEvaluatedCourse :hasEvaluatedStudent :hasEvaluationDate) ;
    rdfs:subClassOf [
        a owl:Restriction ;
        owl:onProperty :hasEvaluatedStudent ;
        owl:cardinality "1"^^xsd:nonNegativeInteger
    ] ;
    rdfs:subClassOf [
        a owl:Restriction ;
        owl:onProperty :hasCourseEvaluated ;
        owl:cardinality "1"^^xsd:nonNegativeInteger
    ] ;
    rdfs:comment "Records the grade of a student in a course." .

## DatatypeProperties
:hasEvaluationGrade a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:domain :Evaluation ;
    rdfs:range xsd:decimal ;
    rdfs:label "evaluationGrade" ;
    rdfs:comment "Grade obtained by the student in the course." .

:hasEvaluationDate a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:domain :Evaluation ;
    rdfs:range xsd:dateTime ;
    rdfs:label "evaluationDate" ;
    rdfs:comment "Date of the evaluation." .

## ObjectProperties
:hasEvaluatedStudent owl:inverseOf :hasEnrollmentEvaluation ;
    a owl:ObjectProperty, owl:FunctionalProperty ;
    rdfs:domain :Evaluation ;
    rdfs:range :Student ;
    rdfs:label "evaluatedStudent" ;
    rdfs:comment "Student who has been evaluated in the course." .

:belongsToEnrollment a owl:ObjectProperty ;
    rdfs:domain :Evaluation ;
    rdfs:range :Enrollment ;
    rdfs:label "belongsToEnrollment" ;
    rdfs:comment "Enrollment to which the evaluation belongs." ;
    owl:inverseOf :hasEvaluation .
:hasCourseEvaluated a owl:ObjectProperty, owl:FunctionalProperty ;
    rdfs:domain :Evaluation ;
    rdfs:range :Course ;
    rdfs:label "evaluatedCourse" ;
    rdfs:comment "Course evaluated in the assessment." ;
    owl:propertyChainAxiom ( :belongsToEnrollment :hasCourseEnrollment) .
